{"version":3,"sources":["redux/authReducer.js","redux/reduxStore.js","components/Home/Home.js","components/Home/HomeContainer.js","utils/Validators/validators.js","components/common/Alert/Alert.js","components/common/FormControls/Input.js","components/Login/Login.js","hok/withSuspense.js","App.js","serviceWorker.js","index.js","utils/jwt.js","api/api.js","redux/ordersReducer.js","hok/withAuthRedirect.js","components/Timer/Timer.js","components/Timer/TimerContainer.js","components/Header/Header.js"],"names":["time","parseJwtFromTokenTime","isAuth","Math","floor","Date","now","initialState","firstName","id","lastName","role","token","localToken","username","expTime","logout","type","login","password","dispatch","a","authAPI","response","payload","data","localStorage","clear","setItem","stopSubmit","_error","request","message","authReducer","state","action","parseJwt","exp","reducers","combineReducers","auth","form","formReducer","orders","orderReducer","store","createStore","applyMiddleware","thunkMiddleware","window","Home","props","className","Header","parseJwtFromTokenFirstName","parseJwtFromTokenRole","compose","withAuthRedirect","connect","required","value","Alert","text","alertType","useState","show","setShow","aria-label","onClick","aria-hidden","Input","input","meta","hasError","error","touched","LoginReduxForm","reduxForm","handleSubmit","submitting","onSubmit","Field","name","component","validate","placeholder","disabled","to","formData","withSuspense","Component","Suspense","fallback","OrdersContainer","React","lazy","OrderContainer","App","path","exact","render","MainApp","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","getItem","JSON","parse","atob","split","e","instance","axios","baseURL","timeout","headers","Authorization","post","ordersAPI","getOrders","get","responce","log","getOrder","consignationId","getOrderItem","order","getOrdersAC","getOrderAC","allOrders","getOrderApi","mapStatetoPropsForRedirect","RedirectComponent","this","TimerHead","color","setColor","initialTime","timer","direction","formatValue","checkpoints","callback","Hours","Minutes","Seconds","currentTime","Timer","setState"],"mappings":"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","file":"static/js/main.a9546e43.chunk.js","sourcesContent":["import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {parseJwt, parseJwtFromTokenTime, localToken} from \"../utils/jwt\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\nconst LOGOUT = 'LOGOUT';\r\n\r\nconst time = parseJwtFromTokenTime();\r\nconst currentTime = Math.floor(Date.now() / 1000);\r\nconst isAuth =(time-currentTime > 0) ? true : false;\r\n\r\nlet initialState = {\r\n    firstName: null,\r\n    id:null,\r\n    lastName:null,\r\n    role:null,\r\n    token:localToken,\r\n    username:null,\r\n    isAuth:isAuth,\r\n    expTime:time ? time : null,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isAuth:true,\r\n                expTime:parseJwt(action.payload.token).exp\r\n            }\r\n        case LOGOUT:\r\n            return {\r\n                ...state,\r\n                isAuth:false,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const setAuthUserData = (data) => ({type: SET_USER_DATA, payload: data});\r\nexport const logout = () => ({type: LOGOUT});\r\n\r\nexport const login = (username, password) => async (dispatch) => {\r\n    try {\r\n        const response = await authAPI.login(username, password);\r\n        dispatch(setAuthUserData(response.data));\r\n        localStorage.clear();\r\n        localStorage.setItem('token', response.data.token);\r\n        localStorage.setItem('firstName', response.data.firstName);\r\n        //window.location = '/'\r\n    } catch (error) {\r\n        if (error.response) {\r\n            if(error.response.data) {\r\n                dispatch(stopSubmit('loginForm', {_error: error.response.data}))\r\n            }\r\n            /*\r\n            console.log(error.response.data);\r\n            console.log(error.response.status);\r\n            console.log(error.response.headers);\r\n            */\r\n        } else if (error.request) {\r\n\r\n            //dispatch(stopSubmit('loginForm', {_error: error.request}))\r\n            /*\r\n            console.log(error.request);\r\n            */\r\n        } else {\r\n\r\n            dispatch(stopSubmit('loginForm', {_error: error.message}))\r\n\r\n        }\r\n\r\n        //dispatch(stopSubmit('loginForm', {_error: error.message}))\r\n        dispatch(stopSubmit('loginForm', {_error: 'Сервер недоступен'}))\r\n    }\r\n\r\n\r\n};\r\n\r\nexport default authReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport authReducer from \"./authReducer\";\r\nimport orderReducer from \"./ordersReducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    orders: orderReducer\r\n\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport Header from '../Header/Header';\r\nimport {parseJwtFromTokenFirstName, parseJwtFromTokenRole} from \"../../utils/jwt\";\r\nconst Home = (props) => {\r\n    return(\r\n        <div className=\"home-page site-wrap\">\r\n            <Header />\r\n            <div className=\"container\">\r\n                <h1 className=\"my-3\">Привет, {props.firstName ? props.firstName : parseJwtFromTokenFirstName()}!</h1>\r\n                <h3>Ваша роль: {props.role ? props.role : parseJwtFromTokenRole()}</h3>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n};\r\nexport default Home;","import React from 'react';\r\nimport Home from \"./Home\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hok/withAuthRedirect\";\r\n\r\n\r\nconst HomeContainer = (props) => {\r\n\r\n    return (\r\n\r\n            <Home {...props} />\r\n        );\r\n}\r\nlet mapStateToProps = (state) => ({\r\n       isAuth: state.auth.isAuth,\r\n        role:state.auth.role,\r\n        firstName:state.auth.firstName\r\n\r\n})\r\n\r\n\r\n\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps,null))(HomeContainer);\r\n","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLenghtCreator = (maxLenght) => (value) => {\r\n    if (value.length > maxLenght)return `Max lenght ${maxLenght} symbols`;\r\n    return undefined;\r\n}","import React, {useState} from 'react';\r\n\r\n\r\nconst Alert = ({text, alertType = 'warning'}) => {\r\n\r\n    const [show, setShow] = useState(true);\r\n    if (!show) return null\r\n    return (\r\n        <div className={`alert alert-${alertType} alert-dismissible fade show`}>\r\n            {text}\r\n            <button type=\"button\" className=\"close\"\r\n                    aria-label=\"Close\"\r\n                    onClick={() => {\r\n                        setShow(false)\r\n                    }}>\r\n                <span aria-hidden=\"true\">×</span>\r\n            </button>\r\n        </div>\r\n    )\r\n};\r\nexport default Alert;\r\n\r\n\r\n\r\n\r\n","import React from 'react';\n\nexport const Input = ({input, meta, ...props}) => {\n    const hasError = meta.error && meta.touched\n    return (\n        <div>\n            <input {...input} {...props} className={hasError ? 'form-control border-error' : 'form-control'} />\n            {hasError && <span className=\"required\">{meta.error}</span>}\n        </div>\n    )\n}\n","import React from 'react';\r\nimport {required} from \"../../utils/Validators/validators\";\r\nimport {reduxForm,Field} from \"redux-form\";\r\nimport {login} from \"../../redux/authReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport Alert from \"../common/Alert/Alert\";\r\nimport {Input} from \"../common/FormControls/Input\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst LoginForm = ({handleSubmit, error, submitting}) => {\r\n\r\n    return (\r\n\r\n        <form className=\"justify-content-center\" onSubmit={handleSubmit}>\r\n            {error && <Alert text={error} alertType='danger'/>}\r\n            <div className=\"form-group\">\r\n                <Field  name={'username'}\r\n                        component={Input}\r\n                        validate={[required]}\r\n                        placeholder={'Логин'}\r\n                        />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <Field  name={'password'}\r\n                        component={Input}\r\n                        type={'password'}\r\n                        validate={[required]}\r\n                        placeholder={'Пароль'}/>\r\n            </div>\r\n            <button className=\"btn btn-primary\" type=\"submit\" disabled={submitting}>{ submitting &&\r\n            <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> } Войти</button>\r\n        </form>\r\n    )\r\n}\r\nconst LoginReduxForm = reduxForm({form: 'loginForm'})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    if (props.isAuth) return <Redirect to={'/'}/>\r\n    const onSubmit = (formData) => {\r\n        props.login(formData)\r\n    }\r\n\r\n\r\n    return (\r\n        <section className=\"min-vh-100 login-page\">\r\n            <div className=\"login-page-caption\">\r\n                <div className=\"container\">\r\n                    <div className=\"row text-white\">\r\n                        <div className=\"col-xl-5 col-lg-6 col-md-8 col-sm-10 mx-auto text-center form p-4\">\r\n                            <h1 className=\"display-6 py-2\">Вход</h1>\r\n                            <div className=\"px-2\">\r\n                              <LoginReduxForm onSubmit={onSubmit}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps,{login})(Login)","import React from 'react';\r\n\r\n\r\nconst withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<div>Загрузка...</div>}>\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n    }\r\n}\r\nexport default withSuspense;\r\n","import React from 'react';\nimport store from './redux/reduxStore'\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport HomeContainer from \"./components/Home/HomeContainer\";\nimport Login from \"./components/Login/Login\";\nimport withSuspense from \"./hok/withSuspense\";\n\nconst OrdersContainer = React.lazy(() => import('./components/Orders/OrdersContainer'));\nconst OrderContainer = React.lazy(() => import('./components/Order/OrderContainer'));\n\nconst App = (props) => {\n    return (\n        <Switch>\n            <Route path=\"/\" exact render={() => <HomeContainer/>}/>\n            <Route path=\"/login\" render={() => <Login/>}/>\n            <Route path=\"/orders\" render={withSuspense(OrdersContainer)}/>\n            <Route path=\"/order/:orderId\" render={withSuspense(OrderContainer)}/>\n        </Switch>\n    );\n}\n\nconst MainApp = (props) => {\n    return <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>\n}\n\n\nexport default MainApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport MainApp from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <MainApp />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const localToken = localStorage.getItem('token');\r\n\r\nexport const parseJwt = (token = localToken) => {\r\n    try {\r\n        return JSON.parse(atob(token.split('.')[1]));\r\n    } catch (e) {\r\n        return null;\r\n    }\r\n};\r\n\r\nexport const parseJwtFromTokenTime = (token = localToken) => {\r\n    try {\r\n        return JSON.parse(atob(token.split('.')[1])).exp;\r\n    } catch (e) {\r\n        return null;\r\n    }\r\n};\r\nexport const parseJwtFromTokenFirstName = () => { return localStorage.getItem('firstName')\r\n};\r\nexport const parseJwtFromTokenRole = (token = localToken) => {\r\n    try {\r\n        return JSON.parse(atob(token.split('.')[1])).role;\r\n    } catch (e) {\r\n        return null;\r\n    }\r\n};","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://109.86.230.142:50000',\r\n    timeout: 5000,\r\n    headers: {\r\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\n\r\nexport const authAPI = {\r\n    login(formData) {\r\n        return instance.post('users/authenticate', {...formData});\r\n    }\r\n};\r\nexport const ordersAPI = {\r\n    getOrders() {\r\n        return instance.get('orders').then(\r\n            responce => {\r\n                return responce.data;\r\n            })\r\n            .catch(function (error) {\r\n                // handle error\r\n                console.log(error);\r\n            })\r\n    },\r\n    getOrder(consignationId) {\r\n        return instance.get('orders/' + consignationId).then(\r\n            responce => {\r\n                return responce.data;\r\n            })\r\n            .catch(function (error) {\r\n                // handle error\r\n                console.log(error);\r\n            })\r\n    },\r\n    getOrderItem(consignationId) {\r\n        return instance.get('orders/item' + consignationId).then(\r\n            responce => {\r\n                return responce.data;\r\n            })\r\n            .catch(function (error) {\r\n                // handle error\r\n                console.log(error);\r\n            })\r\n    },\r\n};\r\n","import {ordersAPI} from \"../api/api\";\r\n\r\n\r\n\r\n\r\nconst GET_ORDERS = 'GET_ORDERS';\r\nconst GET_ORDER = 'GET_ORDER';\r\n\r\n\r\nlet initialState = {\r\n    orders: [],\r\n    order:[]\r\n};\r\n\r\nconst orderReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case GET_ORDERS:\r\n            return {\r\n                ...state,\r\n                orders:action.payload\r\n\r\n            }\r\n        case GET_ORDER:\r\n            return {\r\n                ...state,\r\n                order:action.payload\r\n\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const getOrdersAC = (data) => ({type: GET_ORDERS, payload: data});\r\nexport const getOrderAC = (data) => ({type: GET_ORDER, payload: data});\r\n\r\n\r\nexport const allOrders = () => async (dispatch) => {\r\n    let data = await ordersAPI.getOrders();\r\n    dispatch(getOrdersAC(data));\r\n};\r\nexport const getOrderApi = (consignationId) => async (dispatch) => {\r\n    let data = await ordersAPI.getOrder(consignationId);\r\n    dispatch(getOrderAC(data));\r\n};\r\n\r\nexport default orderReducer;","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStatetoPropsForRedirect = (state) =>({\r\n    isAuth:state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let ConnectedAuthRedirecteComponent = connect(mapStatetoPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirecteComponent;\r\n\r\n}\r\n","import React, {useState} from 'react';\r\nimport Timer from \"react-compound-timer\";\r\nconst TimerHead = (props) => {\r\n    let [color, setColor] = useState('');\r\n    return (\r\n            <div className={`timer ${color}`}>\r\n                <Timer\r\n                    initialTime={props.timer}\r\n                    direction=\"backward\"\r\n                    formatValue={(value) => `${(value < 10 ? `0${value}` : value)}`}\r\n                    checkpoints={[\r\n                        {\r\n                            time: 300000,\r\n                            callback:() => setColor('new-timer')\r\n                        },\r\n                       {\r\n                            time: 0,\r\n                            callback:  ()=>props.logout()\r\n                        }\r\n                    ]}\r\n                >\r\n                    {() => (\r\n                        <div className=\"d-flex\">  <span className=\"time-title d-none d-sm-block\">До конца сессии <span className=\"dotter\">-</span></span>\r\n                            <span className=\"time-item\"><Timer.Hours formatValue={value => `${value}`} /></span>\r\n                            <span className=\"dotter\">:</span>\r\n                            <span className=\"time-item\"><Timer.Minutes /></span>\r\n                            <span className=\"dotter\">:</span>\r\n                            <span className=\"time-item\"><Timer.Seconds formatValue={value => `${value}`}/></span>\r\n                        </div>\r\n                    )}\r\n                </Timer>\r\n            </div>\r\n    );\r\n}\r\nexport default TimerHead;\r\n\r\n\r\n","import React from 'react';\r\nimport TimerHead from \"../Timer/Timer\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/authReducer\";\r\n\r\nconst TimerHeadContainer = (props) => {\r\n    const currentTime = Math.floor(Date.now() / 1000);\r\n    const timer = (props.expTime-currentTime)*1000;\r\n    return (\r\n        <TimerHead {...props} timer={timer}/>\r\n    );\r\n}\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        expTime:state.auth.expTime\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        logout: () => {\r\n            localStorage.clear();\r\n            dispatch(logout());\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect (mapStateToProps,mapDispatchToProps)(TimerHeadContainer)\r\n\r\n\r\n","import React, {useState} from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport TimerHeadContainer from \"../Timer/TimerContainer\";\nimport {logout} from \"../../redux/authReducer\";\nimport {connect} from \"react-redux\";\n\n\nconst Header = (props) => {\n    const [show, setState] = useState(false);\n\n    function toggle() {\n        setState(!show);\n    }\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\" role=\"navigation\">\n            <div className=\"container justify-content-between align-content-start\">\n                <div className=\"menu\">\n                <button className=\"navbar-toggler\" onClick={toggle}>\n                    <span className=\"ti-view-list\"></span>\n                </button>\n                <div className={show ? 'menu bg-dark position-absolute p-3 collapse navbar-collapse show'\n                    : 'collapse navbar-collapse'}  >\n                    <ul className=\"navbar-nav\">\n                        <li className=\"nav-item\"><NavLink to=\"/\" className=\" nav-link\">\n                            <span className=\"ti-user\"></span> Профиль</NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink to=\"/orders\" className=\"nav-link\">\n                                <span className=\"ti-layers\"></span> Накладные</NavLink>\n                        </li>\n                    </ul>\n                </div>\n                </div>\n                <TimerHeadContainer />\n                {props.isAuth ? <div className=\"pl-3\"><span onClick={props.logout} className=\"btn btn-info small ti-unlock btn-sm\"></span></div>\n                    : ''}\n\n            </div>\n        </nav>\n\n    );\n}\nlet mapStateToProps = (state) => {\n    return {\n        isAuth:state.auth.isAuth\n    }\n}\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        logout: () => {\n            localStorage.clear();\n            dispatch(logout());\n        }\n    }\n}\n\nexport default connect (mapStateToProps,mapDispatchToProps)(Header)\n\n"],"sourceRoot":""}